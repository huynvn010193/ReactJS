import React, {useState, useContext} from 'react';
import {CurrentUserContext} from 'contexts/currentUser';
import useFetch from 'hooks/useFetch';

const Settings = () => {
  const apiUrl = '/user';
  const [{response, error}, doFetch] = useFetch(apiUrl);
  const [name, setName] = useState('');
  const [image, setImage] = useState('');
  const [bio, setBio] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [currentUserState, dispatch] = useContext(CurrentUserContext);

  const handleSubmit = (event) => {
    event.preventDefault();
    console.log('handleSubmit');
    doFetch({
      method: 'put',
      data: {
        user: {
          user: {
            ...currentUserState.currentUser, 
            image,
            name, 
            bio, 
            email, 
            password
          }
        }
      }
    })
  }

  const logout = () => {

  }

  return (
    <div className="settings-page">
      <div className="container page">
        <div className="row">
          <div className="col-md-6 offset-md-3 col-xs-12">
            <h1 className="text-xs-center">Your settings</h1>
            Backend Errors Messages
            <form onSubmit={handleSubmit}>
              <fieldset className="form-group">
                <input 
                  type="text" 
                  className="form-control form-control-lg" 
                  placeholder="URL of profile picture"
                  value={image}
                  onChange={e => setImage(e.target.value)}
                />
              </fieldset>
              <fieldset className="form-group">
                <input 
                  type="text" 
                  className="form-control form-control-lg" 
                  placeholder="Username"
                  value={name}
                  onChange={e => setName(e.target.value)}
                />
              </fieldset>
              <fieldset className="form-group">
                <textarea 
                  type="text" 
                  className="form-control form-control-lg" 
                  placeholder="Short bio"
                  value={bio}
                  rows="8"
                  onChange={e => setBio(e.target.value)}
                ></textarea>
              </fieldset>
              <fieldset className="form-group">
                <input 
                  type="text" 
                  className="form-control form-control-lg" 
                  placeholder="Email"
                  value={email}
                  onChange={e => setEmail(e.target.value)}
                />
              </fieldset>
              <fieldset className="form-group">
                <input 
                  type="password" 
                  className="form-control form-control-lg" 
                  placeholder="Password"
                  value={password}
                  onChange={e => setPassword(e.target.value)}
                />
              </fieldset>
              <fieldset>
                <button type="submit" className="btn btn-lg btn-primary pull-xs-right">
                  Update settings
                </button>
              </fieldset>
            </form>
            <hr/>
            <button className="btn btn-outline-danger" onClick={logout}>Or click here to Logout</button>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Settings;