import React, { useEffect, Fragment } from 'react';
import { getPagination, limit } from 'utils';
import {stringify} from 'query-string';
import useFecth from 'hooks/useFetch';
import Loading from 'components/loading';
import ErrorMessage from 'components/errorMessage';
import Feed from 'components/feed';
import Pagination from 'components/pagination';

const getApiUrl = ({username, offset, isFavorites}) => {
  const params = isFavorites ? {
    limit,
    offset,
    favorited: username
  } : {
    limit,
    offset,
    author: username
  }
  // stringify: biến 1 Object thành string dạng key=value&key=value.
  return `/articles?${stringify(params)}`;
}

const UserArticles = ({username, location, url}) => {
  console.log("UserArticles -> url", url)
  const isFavorites = location.pathname.includes('favorites');
  const {offset, currentPage} = getPagination(location.search);
  const apiUrl = getApiUrl({username, offset, isFavorites});
  const urlEx = isFavorites ? `${url}/favorites` : url;
  const [{response, isLoading, error},doFetch] = useFecth(apiUrl);

  useEffect(() => {
    doFetch();
  },[doFetch, isFavorites,currentPage]);

  return (
    <div>
      {isLoading && <Loading />}
      {error && <ErrorMessage />}
      {!isLoading && response && (
        <Fragment>
          <Feed articles={response.articles}/>
          <Pagination 
            total={response.articlesCount} 
            limit={limit} 
            url={urlEx} 
            currentPage={currentPage} 
          />
        </Fragment>
      )}
    </div>
  )
}

export default UserArticles;