import React, { useEffect, useContext } from 'react';
import useFetch from 'hooks/useFetch';
import { Link } from 'react-router-dom';
import Loading from 'components/loading';
import ErrorMessage from 'components/errorMessage';
import TagList from 'components/tagList';
import { CurrentUserContext } from 'contexts/currentUser';

const Article = props => {
  const slug = props.match.params.slug;
  const apiUrl = `/articles/${slug}`;
  const [{response, error, isLoading}, doFetch] = useFetch(apiUrl);
  const [currentUserState] = useContext(CurrentUserContext);
  
  const isAuthor = () => {
    if(currentUserState.isLoggedIn === null || !response) {
      return false;
    }
    
    return (
      currentUserState.currentUser.username === response.article.author.username
    )
  }
  
  console.log("isAuthor -> isAuthor", isAuthor())
  
  useEffect(() => {
    doFetch()
  }, [doFetch]);

  return (
    <div className='article-page'>
      <div className='banner'>
        {!isLoading && response && (
          <div className='container'>
            <h1>{response.article.title}</h1>
            <div className='article-meta'>
              <Link to={`/profiles/${response.article.author.username}`}>
                <img src={response.article.author.image} alt=""/>
              </Link>
              <div className='info'>
                <Link to={`/profiles/${response.article.author.username}`}>
                  {response.article.author.username}
                </Link>
                <span className='date'>{response.article.createdAt}</span>
              </div>
            </div>
            {isAuthor() && (
              <span>
                <Link 
                  to={`/articles/${response.article.slug}/edit`} 
                  className='btn btn-outline-secondary btn-sm'
                />
                <i className="ion-edit"></i>
                Edit Article
              </span>
            )}
          </div>
        )}
      </div>
      <div className='container page'>
        {isLoading && <Loading />}
        {error && <ErrorMessage />}
        {!isLoading && response && (
          <div className='row article-content'>
            <div>
              <p>{response.article.body}</p>
            </div>
            <TagList tags={response.article.tagList}/>
          </div>
        )}
        <hr/>
      </div>
    </div>
  )
}

export default Article;