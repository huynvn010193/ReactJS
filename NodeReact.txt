29/01/2018: 
	+ Tải Tiện ích React Developer cho Chorme
	+ Lệnh cài đặt: https://reactjs.org/docs/add-react-to-a-new-app.html
		- npm install -g create-react-app
		- create-react-app my-app
		- cd my-app
		- npm start
01/02/2018:
	+ JSX: Javascript Syntax Extension
	+ JSX = Javascript + XML: cú pháp thay thế Javascript, cách viết gần giống XML. Thay thế React.createElement()
	+ JSX không phải là HTML
	+Props:
		- Đây là thuộc tính của 1 components nào đó.
	03/02/2018:
	+ Khi State thay đổi thì toàn bộ render cũng thay đổi.
	+ LifeCycle:
		- Mouting contructor -> componentWillMount() -> render -> componentDidMount()
		- Updating: componentWillReceiveProps() -> shouldComponentUpdate() -> componentWillUpdate() ->render() -> componentDidUpdate()
	+ componentDidMount(): nhúng thư viên jQuery hay đưa ra những tương tác trên các thành phần này
		- shouldComponentUpdate(): khi retrun false thì sẽ không dc chạy tiếp
	npm install jquery --save
08/02/2018
	Cài đặt uuid: npm install uuid
13/04/2018
	+ Chỉnh lại port: Thê vô file package.json => 
	scripts ": {
		"start" : "set PORT=3006 && react-scripts start"	
	}
15/04/2018
	+ Lệnh cài redux: 
		npm install --save redux
16/04/2018:
	+ window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(); => lệnh kích hoạt extention của Chrome để xem 
	sự thay đổi của redux.
	=> Mộ số mã nguồn sẽ viết store vảo phần index.js lun
	=> Khi mang source qua máy khác phải install lại redux và react-redux
20/04/2018
	+ Lấy giá trị của input
	handleChange(event) {
    	const target = event.target; // Có thể là input hoặc có thể là selectbox
	    const value = target.type === 'checkbox' ? target.checked : target.value;
	    const name = target.name;
	    this.setState({
	    	[name]: value
	    });	    
  	}
	Trong thẻ input => value={this.state.value} onChange={this.handleChange}
24/04/2018:
	+ npm install lodash.
	+ tính tổng quantity =>dùng sumBy trong lodash.
25/04/2018
	+ Khi key không thay đổi thì các phần tử sẽ không load lại: <CartItem key={index + '-'+cartItem.quantity} cartItem={cartItem} index={index}/>
26/04/2015:
	+ Trong containers: quy định những tập tin kết nối vs redux.
27/04/2018: 
	+ PropTypes: kiểm tra xem những cái properties(thuộc tính) nhận vào có đúng kiểu dữ liệu của nó hay ko ?
28/04/2018
	+ File ProductsContainer.js 
		- 	<ProductList products={products}>
                {this.showElementProduct(products)}
            </ProductList>
		{this.showElementProduct(products)} => qua file ProductList.js thì là this.props.children;
30/04/2018
	+ Install react-router: $ npm install --save react-router-dom
	+ Sử dụng Link, NavLink: Lưu ý vs thuộc tính exact; => activeClassName="selected": nếu dc chọn thì active
	+ Sử dụng Switch=> Ý nghĩa, nếu đường dẫn trùng thì lấy đường dẫn duy nhất.
	+ Cách viết lấy url: to={`${match.url}/angular`}
	+ Nếu không nối chuỗi ghi đơn giản lun {`${match.url}`} => {match.url}
01/05/2018
	+ https://reacttraining.com/react-router/
	+ Ghi bằng arrow function thì phải truyền match như sau:  main: ({match}) => <Course match={match}/>
08/05/2018: Học visual code:
	Setting lăn chuột: File->references->Settings->"editor.mouseWheelZoom": true
	
	
	